//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reg2015.RVDataModel
{
    using System;
    using System.Collections.Generic;
    
    public abstract partial class tblDocumentCommon : System.ComponentModel.INotifyPropertyChanged
    {
        #region Implement INotifyPropertyChanged
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        #endregion
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public tblDocumentCommon()
        {
            this.tblDocumentCommon1 = new HashSet<tblDocumentCommon>();
            // this.tblDocumentCommon1 = new System.Collections.ObjectModel.ObservableCollection<tblDocumentCommon>(); // Н.З. тоже работает
        }
    
        
    
        partial void OnIDChanging(System.Guid value);
        partial void OnIDChanged();
        private System.Guid _ID;
        public System.Guid ID 
        { 
            get { return _ID; } 
            set
            {
                if(_ID != value)
                {
                    OnIDChanging(_ID);
                    _ID = value;
                    OnIDChanged();
                    OnPropertyChanged("ID");
                }
            }
        }
        
    
        partial void OnPatientIDChanging(System.Guid value);
        partial void OnPatientIDChanged();
        private System.Guid _PatientID;
        public System.Guid PatientID 
        { 
            get { return _PatientID; } 
            set
            {
                if(_PatientID != value)
                {
                    OnPatientIDChanging(_PatientID);
                    _PatientID = value;
                    OnPatientIDChanged();
                    OnPropertyChanged("PatientID");
                }
            }
        }
        
    
        partial void OnManipulationIDChanging(System.Guid value);
        partial void OnManipulationIDChanged();
        private System.Guid _ManipulationID;
        public System.Guid ManipulationID 
        { 
            get { return _ManipulationID; } 
            set
            {
                if(_ManipulationID != value)
                {
                    OnManipulationIDChanging(_ManipulationID);
                    _ManipulationID = value;
                    OnManipulationIDChanged();
                    OnPropertyChanged("ManipulationID");
                }
            }
        }
        
    
        partial void OnIdxChanging(int value);
        partial void OnIdxChanged();
        private int _Idx;
        public int Idx 
        { 
            get { return _Idx; } 
            set
            {
                if(_Idx != value)
                {
                    OnIdxChanging(_Idx);
                    _Idx = value;
                    OnIdxChanged();
                    OnPropertyChanged("Idx");
                }
            }
        }
        
    
        partial void OnNumberChanging(int value);
        partial void OnNumberChanged();
        private int _Number;
        public int Number 
        { 
            get { return _Number; } 
            set
            {
                if(_Number != value)
                {
                    OnNumberChanging(_Number);
                    _Number = value;
                    OnNumberChanged();
                    OnPropertyChanged("Number");
                }
            }
        }
        
    
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        private string _FirstName;
        public string FirstName 
        { 
            get { return _FirstName; } 
            set
            {
                if(_FirstName != value)
                {
                    OnFirstNameChanging(_FirstName);
                    _FirstName = value;
                    OnFirstNameChanged();
                    OnPropertyChanged("FirstName");
                }
            }
        }
        
    
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        private string _LastName;
        public string LastName 
        { 
            get { return _LastName; } 
            set
            {
                if(_LastName != value)
                {
                    OnLastNameChanging(_LastName);
                    _LastName = value;
                    OnLastNameChanged();
                    OnPropertyChanged("LastName");
                }
            }
        }
        
    
        partial void OnFatherNameChanging(string value);
        partial void OnFatherNameChanged();
        private string _FatherName;
        public string FatherName 
        { 
            get { return _FatherName; } 
            set
            {
                if(_FatherName != value)
                {
                    OnFatherNameChanging(_FatherName);
                    _FatherName = value;
                    OnFatherNameChanged();
                    OnPropertyChanged("FatherName");
                }
            }
        }
        
    
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        private string _Address;
        public string Address 
        { 
            get { return _Address; } 
            set
            {
                if(_Address != value)
                {
                    OnAddressChanging(_Address);
                    _Address = value;
                    OnAddressChanged();
                    OnPropertyChanged("Address");
                }
            }
        }
        
    
        partial void OnPaspSeriyaChanging(string value);
        partial void OnPaspSeriyaChanged();
        private string _PaspSeriya;
        public string PaspSeriya 
        { 
            get { return _PaspSeriya; } 
            set
            {
                if(_PaspSeriya != value)
                {
                    OnPaspSeriyaChanging(_PaspSeriya);
                    _PaspSeriya = value;
                    OnPaspSeriyaChanged();
                    OnPropertyChanged("PaspSeriya");
                }
            }
        }
        
    
        partial void OnPaspNumberChanging(string value);
        partial void OnPaspNumberChanged();
        private string _PaspNumber;
        public string PaspNumber 
        { 
            get { return _PaspNumber; } 
            set
            {
                if(_PaspNumber != value)
                {
                    OnPaspNumberChanging(_PaspNumber);
                    _PaspNumber = value;
                    OnPaspNumberChanged();
                    OnPropertyChanged("PaspNumber");
                }
            }
        }
        
    
        partial void OnPaspIssuingChanging(string value);
        partial void OnPaspIssuingChanged();
        private string _PaspIssuing;
        public string PaspIssuing 
        { 
            get { return _PaspIssuing; } 
            set
            {
                if(_PaspIssuing != value)
                {
                    OnPaspIssuingChanging(_PaspIssuing);
                    _PaspIssuing = value;
                    OnPaspIssuingChanged();
                    OnPropertyChanged("PaspIssuing");
                }
            }
        }
        
    
        partial void OnPriceChanging(Nullable<decimal> value);
        partial void OnPriceChanged();
        private Nullable<decimal> _Price;
        public Nullable<decimal> Price 
        { 
            get { return _Price; } 
            set
            {
                if(_Price != value)
                {
                    OnPriceChanging(_Price);
                    _Price = value;
                    OnPriceChanged();
                    OnPropertyChanged("Price");
                }
            }
        }
        
    
        partial void OnEyeChanging(Nullable<Eye> value);
        partial void OnEyeChanged();
        private Nullable<Eye> _Eye;
        public Nullable<Eye> Eye 
        { 
            get { return _Eye; } 
            set
            {
                if(_Eye != value)
                {
                    OnEyeChanging(_Eye);
                    _Eye = value;
                    OnEyeChanged();
                    OnPropertyChanged("Eye");
                }
            }
        }
        
    
        partial void OnPrintedChanging(bool value);
        partial void OnPrintedChanged();
        private bool _Printed;
        public bool Printed 
        { 
            get { return _Printed; } 
            set
            {
                if(_Printed != value)
                {
                    OnPrintedChanging(_Printed);
                    _Printed = value;
                    OnPrintedChanged();
                    OnPropertyChanged("Printed");
                }
            }
        }
        
    
        partial void OnDateCreateChanging(System.DateTime value);
        partial void OnDateCreateChanged();
        private System.DateTime _DateCreate;
        public System.DateTime DateCreate 
        { 
            get { return _DateCreate; } 
            set
            {
                if(_DateCreate != value)
                {
                    OnDateCreateChanging(_DateCreate);
                    _DateCreate = value;
                    OnDateCreateChanged();
                    OnPropertyChanged("DateCreate");
                }
            }
        }
        
    
        partial void OnDateRealizationChanging(Nullable<System.DateTime> value);
        partial void OnDateRealizationChanged();
        private Nullable<System.DateTime> _DateRealization;
        public Nullable<System.DateTime> DateRealization 
        { 
            get { return _DateRealization; } 
            set
            {
                if(_DateRealization != value)
                {
                    OnDateRealizationChanging(_DateRealization);
                    _DateRealization = value;
                    OnDateRealizationChanged();
                    OnPropertyChanged("DateRealization");
                }
            }
        }
        
    
        partial void OnDateDeleteChanging(Nullable<System.DateTime> value);
        partial void OnDateDeleteChanged();
        private Nullable<System.DateTime> _DateDelete;
        public Nullable<System.DateTime> DateDelete 
        { 
            get { return _DateDelete; } 
            set
            {
                if(_DateDelete != value)
                {
                    OnDateDeleteChanging(_DateDelete);
                    _DateDelete = value;
                    OnDateDeleteChanged();
                    OnPropertyChanged("DateDelete");
                }
            }
        }
        
    
        partial void OnReplaceToIDChanging(Nullable<System.Guid> value);
        partial void OnReplaceToIDChanged();
        private Nullable<System.Guid> _ReplaceToID;
        public Nullable<System.Guid> ReplaceToID 
        { 
            get { return _ReplaceToID; } 
            set
            {
                if(_ReplaceToID != value)
                {
                    OnReplaceToIDChanging(_ReplaceToID);
                    _ReplaceToID = value;
                    OnReplaceToIDChanged();
                    OnPropertyChanged("ReplaceToID");
                }
            }
        }
        
    
        partial void OnPhonChanging(string value);
        partial void OnPhonChanged();
        private string _Phon;
        public string Phon 
        { 
            get { return _Phon; } 
            set
            {
                if(_Phon != value)
                {
                    OnPhonChanging(_Phon);
                    _Phon = value;
                    OnPhonChanged();
                    OnPropertyChanged("Phon");
                }
            }
        }
        
    
        partial void OnCalculatedDocYearChanging(Nullable<int> value);
        partial void OnCalculatedDocYearChanged();
        private Nullable<int> _CalculatedDocYear;
        public Nullable<int> CalculatedDocYear 
        { 
            get { return _CalculatedDocYear; } 
            set
            {
                if(_CalculatedDocYear != value)
                {
                    OnCalculatedDocYearChanging(_CalculatedDocYear);
                    _CalculatedDocYear = value;
                    OnCalculatedDocYearChanged();
                    OnPropertyChanged("CalculatedDocYear");
                }
            }
        }
        
    
        partial void OnTriggerDocTypeChanging(int value);
        partial void OnTriggerDocTypeChanged();
        private int _TriggerDocType;
        public int TriggerDocType 
        { 
            get { return _TriggerDocType; } 
            set
            {
                if(_TriggerDocType != value)
                {
                    OnTriggerDocTypeChanging(_TriggerDocType);
                    _TriggerDocType = value;
                    OnTriggerDocTypeChanged();
                    OnPropertyChanged("TriggerDocType");
                }
            }
        }
        
    
        partial void OnBirthDayChanging(Nullable<System.DateTime> value);
        partial void OnBirthDayChanged();
        private Nullable<System.DateTime> _BirthDay;
        public Nullable<System.DateTime> BirthDay 
        { 
            get { return _BirthDay; } 
            set
            {
                if(_BirthDay != value)
                {
                    OnBirthDayChanging(_BirthDay);
                    _BirthDay = value;
                    OnBirthDayChanged();
                    OnPropertyChanged("BirthDay");
                }
            }
        }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<tblDocumentCommon> _tblDocumentCommon1;
        public virtual ICollection<tblDocumentCommon> tblDocumentCommon1 
        { 
            get { return _tblDocumentCommon1; } 
            set
            {
                if(_tblDocumentCommon1 != value)
                {
                    _tblDocumentCommon1 = value;
                    OnPropertyChanged("tblDocumentCommon1");
                }
            }
        }
    	
        private tblDocumentCommon _tblDocumentCommon2;
        public virtual tblDocumentCommon tblDocumentCommon2 
        { 
            get { return _tblDocumentCommon2; } 
            set
            {
                if(_tblDocumentCommon2 != value)
                {
                    _tblDocumentCommon2 = value;
                    OnPropertyChanged("tblDocumentCommon2");
                }
            }
        }
    	
        private tblManipulation _tblManipulation;
        public virtual tblManipulation tblManipulation 
        { 
            get { return _tblManipulation; } 
            set
            {
                if(_tblManipulation != value)
                {
                    _tblManipulation = value;
                    OnPropertyChanged("tblManipulation");
                }
            }
        }
    	
        private tblPatient _tblPatient;
        public virtual tblPatient tblPatient 
        { 
            get { return _tblPatient; } 
            set
            {
                if(_tblPatient != value)
                {
                    _tblPatient = value;
                    OnPropertyChanged("tblPatient");
                }
            }
        }
    	
    }
}
