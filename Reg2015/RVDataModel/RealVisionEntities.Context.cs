//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reg2015.RVDataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RealVisionDataContext : DbContext
    {
        public RealVisionDataContext()
            : base("name=RealVisionDataContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblDocumentCommon> tblDocumentCommons { get; set; }
        public virtual DbSet<tblEmployee> tblEmployees { get; set; }
        public virtual DbSet<tblManipulation> tblManipulations { get; set; }
        public virtual DbSet<tblOffer> tblOffers { get; set; }
        public virtual DbSet<tblPatient> tblPatients { get; set; }
        public virtual DbSet<tblReferral> tblReferrals { get; set; }
        public virtual DbSet<tblReferralVendor> tblReferralVendors { get; set; }
    
        public virtual int spFlashDocument(Nullable<System.Guid> docID)
        {
            var docIDParameter = docID.HasValue ?
                new ObjectParameter("DocID", docID) :
                new ObjectParameter("DocID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFlashDocument", docIDParameter);
        }
    
        public virtual int spPrepareDocNumbers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPrepareDocNumbers");
        }
    
        public virtual int spPrpareDocumentForPrint(Nullable<System.Guid> docID)
        {
            var docIDParameter = docID.HasValue ?
                new ObjectParameter("DocID", docID) :
                new ObjectParameter("DocID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPrpareDocumentForPrint", docIDParameter);
        }
    }
}
